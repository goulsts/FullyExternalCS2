name: .NET Build & Release

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-release:
    runs-on: windows-latest

    env:
      Project_Path: CS2Cheat.csproj
      Output_Dir: publish

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Get last commit message
      id: last_commit
      run: |
        echo "commit_message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

    - name: Calculate next tag version
      id: tag
      shell: bash
      run: |
        last_tag=$(git tag --sort=-v:refname | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
        echo "Last tag: $last_tag"
        if [[ -z "$last_tag" ]]; then
          new_tag="0.0.1"
        else
          IFS='.' read -r major minor patch <<< "$last_tag"
          patch=$((patch + 1))
          new_tag="$major.$minor.$patch"
        fi
        echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
        git tag "$new_tag"
        git push origin "$new_tag"

    - name: Build project
      run: dotnet publish $env:Project_Path -c Release -o $env:Output_Dir -r win-x64 `
        /p:PublishSingleFile=true `
        /p:IncludeNativeLibrariesForSelfExtract=true `
        /p:IncludeAllContentForSelfExtract=true `
        /p:DeleteExistingFiles=true `
        --self-contained false
      env:
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.tag.outputs.new_tag }}
        name: ${{ steps.tag.outputs.new_tag }}
        body: |
          ${{ steps.last_commit.outputs.commit_message }}
        files: ${{ env.Output_Dir }}/*.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
